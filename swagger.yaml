openapi: 3.0.0
info:
  title: task-manager API
  contact: {}
  version: "1.0"
servers:
  - url: https://task-manager-api-7gop.onrender.com/api/v1
    variables: {}
paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get All Tasks
      operationId: GetAllTasks
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - Tasks
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateTaskRequest"
                - example:
                    name: lorem ipsum 4
                    completed: false
            example:
              name: lorem ipsum 4
              completed: false
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /tasks/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The task ID
    get:
      tags:
        - Tasks
      summary: Get Single Task
      operationId: GetSingleTask
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Tasks
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateTaskRequest"
                - example:
                    name: lorem ipsum dummy
                    completed: true
            example:
              name: lorem ipsum dummy
              completed: true
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Tasks
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      operationId: Loginuser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginuserRequest"
                - example:
                    email: johndoe@gmail.com
                    password: johnpassword
            example:
              email: johndoe@gmail.com
              password: johnpassword
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register user
      operationId: Registeruser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisteruserRequest"
                - example:
                    name: john doe
                    email: johndoe@gmail.com
                    password: johnpassword
            example:
              name: john doe
              email: johndoe@gmail.com
              password: johnpassword
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - name
        - completed
      type: object
      properties:
        name:
          type: string
        completed:
          type: boolean
      example:
        name: lorem ipsum 4
        completed: false
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - name
        - completed
      type: object
      properties:
        name:
          type: string
        completed:
          type: boolean
      example:
        name: lorem ipsum dummy
        completed: true
    LoginuserRequest:
      title: LoginuserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: johndoe@gmail.com
        password: johnpassword
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: john doe
        email: johndoe@gmail.com
        password: johnpassword
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Tasks
    description: ""
  - name: Auth
    description: ""
